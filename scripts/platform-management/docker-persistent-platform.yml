version: '3.8'

# Complete Persistent AI Platform Stack
# This Docker Compose file ensures all services restart automatically after reboot
# and includes proper health checks and dependency management

networks:
  ai-platform:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.0.0/16

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  nginx_logs:
    driver: local
  platform_logs:
    driver: local
  platform_configs:
    driver: local

services:
  # ===========================================
  # NGINX SSL REVERSE PROXY (Persistent)
  # ===========================================
  nginx-ssl-persistent:
    image: nginx:alpine
    container_name: ai-platform-nginx-ssl
    restart: unless-stopped
    ports:
    - "8443:443"
    - "8080:80"
    volumes:
    - /etc/ssl/certs/ubuntuaicodeserver.tail5137b4.ts.net.crt:/etc/ssl/certs/server.crt:ro
    - /etc/ssl/private/ubuntuaicodeserver.tail5137b4.ts.net.key:/etc/ssl/private/server.key:ro
    - /home/keith/chat-copilot/configs/nginx/nginx-ssl.conf:/etc/nginx/nginx.conf:ro
    - /home/keith/chat-copilot/webapi/wwwroot:/var/www/html:ro
    - nginx_logs:/var/log/nginx
    networks:
      ai-platform:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
    - platform-services

  # ===========================================
  # PLATFORM SERVICES ORCHESTRATOR
  # ===========================================
  platform-services:
    build:
      context: /home/keith/chat-copilot
      dockerfile: configs/docker-compose/docker-compose-full-stack.yml
    container_name: ai-platform-orchestrator
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /home/keith/chat-copilot:/workspace
    - platform_logs:/logs
    - platform_configs:/configs
    networks:
      ai-platform:
        ipv4_address: 172.20.0.20
    environment:
    - COMPOSE_FILE=/workspace/configs/docker-compose/docker-compose-full-stack.yml
    - WORKSPACE_DIR=/workspace
    command: >
      sh -c "
        cd /workspace &&
        docker-compose -f configs/docker-compose/docker-compose-full-stack.yml up -d &&
        tail -f /dev/null
      "
    healthcheck:
      test: [ "CMD", "docker", "ps", "--filter", "name=ai-platform", "--format", "{{.Names}}" ]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 120s

  # ===========================================
  # PLATFORM HEALTH MONITOR
  # ===========================================
  platform-monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    container_name: ai-platform-health-monitor
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - platform_logs:/app/logs
    - ./monitoring-config.json:/app/config.json:ro
    networks:
      ai-platform:
        ipv4_address: 172.20.0.30
    environment:
    - CHECK_INTERVAL=60
    - FAILURE_THRESHOLD=3
    - RESTART_FAILED_SERVICES=true
    - LOG_LEVEL=INFO
    depends_on:
      nginx-ssl-persistent:
        condition: service_healthy
      platform-services:
        condition: service_healthy

  # ===========================================
  # CONFIGURATION BACKUP SERVICE
  # ===========================================
  config-backup:
    image: alpine:latest
    container_name: ai-platform-config-backup
    restart: unless-stopped
    volumes:
    - /home/keith/chat-copilot:/source:ro
    - platform_configs:/backup
    networks:
      ai-platform:
        ipv4_address: 172.20.0.40
    command: >
      sh -c "
        while true; do
          echo 'Creating configuration backup...'
          tar -czf /backup/platform-config-$(date +%Y%m%d-%H%M%S).tar.gz -C /source configs/ scripts/ *.yml *.json *.sh 2>/dev/null || true
          find /backup -name '*.tar.gz' -mtime +7 -delete
          sleep 3600
        done
      "
